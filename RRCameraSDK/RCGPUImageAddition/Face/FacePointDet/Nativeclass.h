/* DO NOT EDIT THIS FILE - it is machine generated */

/* Header for class com_example_Point_demo_Nativeclass */

#ifndef _Included_com_example_Point_demo_Nativeclass
#define _Included_com_example_Point_demo_Nativeclass
//#include <opencv2/opencv.hpp>
#define MAX_FACE_COUNT 5
//#define TEST_TIME
typedef struct
{
    char *imageName;
    int positionType;//贴纸位置类型
    //float sizeRatio;//贴纸和人脸的大小bili
    CGPoint point[3];//素材中固定点的位置  根据类型决定有效点的个数  一般为2个或3个  位置点是相对图像素材大小的点
    int count;//贴纸帧数
    int cycle;//贴纸在录制过程中考虑丢帧后的周期
}FaceStickerInf;

typedef struct
{
    char *imageName;
    CGRect rect;
    int count;//贴纸帧数
    int cycle;//贴纸在录制过程中考虑丢帧后的周期
}FaceStickerBackInf;

//贴纸结构体
typedef struct
{
    FaceStickerInf faceStickerInf[5];
    int stickerCount;
    FaceStickerBackInf faceStickerBackInf[2];
    int stickerBackCount;
    CGRect cutRect;//由于保持16:9的比例，需要对数据源进行裁剪
    int index;//贴纸索引
    char *soundFile;
}FaceSticker;

struct FacePointDataT
{
    int faceCount;
    CGRect rect[MAX_FACE_COUNT];
    int poiCount;
    int poi[MAX_FACE_COUNT][50][2];
    CGRect leftEyeRect[MAX_FACE_COUNT];
    CGRect rightEyeRect[MAX_FACE_COUNT];
    CGRect monthRect[MAX_FACE_COUNT];
    CGRect noseRect[MAX_FACE_COUNT];
    CGRect leftCheekRect[MAX_FACE_COUNT];
    CGRect rightCheekRect[MAX_FACE_COUNT];
    CGRect chinRect[MAX_FACE_COUNT];
    CGRect foreheadRect[MAX_FACE_COUNT];
    CGRect hairTopRect[MAX_FACE_COUNT];
    CGRect leftBrowPoints[MAX_FACE_COUNT];
    CGRect rightBrowPoints[MAX_FACE_COUNT];
    float originWidth;
    float originHeight;
};
typedef struct FacePointDataT FacePointData;
//extern ShapeRegressor* RegressorMod;
int FacePointInit();
int FacePointStart(unsigned char *imgbuf,FacePointData *resultData,int w,int h,int widthStep,int rotationType);
int FacePointStartForImg(UIImage* imgbuf,FacePointData *resultData,int w,int h,int widthStep,int rotationType);
int faceTrackMain(unsigned char *imgbuf,FacePointData *resultData,int w,int h,int widthStep,int rotationType);
int FacePointreleaseModel();

#ifdef __cplusplus
extern "C" {
#endif

//void releaseModel(ShapeRegressor* model);

//UIImage* FacePointMain(UIImage *imgbuf);
    int FacePointMain(UIImage *imgbuf,FacePointData *resultData);
#ifdef __cplusplus
}
#endif
#endif
